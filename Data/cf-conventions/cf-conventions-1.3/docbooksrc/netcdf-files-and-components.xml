<chapter>
  <title>
      NetCDF Files and Components
  </title>

  <para>
    The components of a netCDF file are described in section 2
    of the NUG 
    <biblioref linkend="nug"/>. 
    In this section we describe conventions
    associated with filenames and the basic components of
    a netCDF file. We also introduce new attributes for
    describing the contents of a file.
  </para>

  <section>
    <title>Filename</title>
    <para>
      NetCDF files should have the file name extension "<filename>.nc</filename>". 
    </para>
  </section>
  <section>
    <title>Data Types</title>
    <para>
      The netCDF data types <varname>char</varname>, <varname>byte</varname>, 
      <varname>short</varname>, <varname>int</varname>, 
      <varname>float</varname> or <varname>real</varname>, and <varname>double</varname>
      are all acceptable. The
      <varname>char</varname> type is not intended for numeric data. One
      byte numeric data should be stored using the
      <varname>byte</varname> data type. All integer types are treated by
      the netCDF interface as signed. It is possible
      to treat the <varname>byte</varname> type as unsigned by using the
      NUG convention of indicating the unsigned range
      using the 
      <varname>valid_min</varname>, 
      <varname>valid_max</varname>, 
      or 
      <varname>valid_range</varname>
      attributes.
    </para>
    <para>
       NetCDF does not support a character string
       type, so these must be represented as character
       arrays. In this document, a one dimensional array
       of character data is simply referred to as a
       "string". An n-dimensional array of strings
       must be implemented as a character array of
       dimension (n,max_string_length), with the last
       (most rapidly varying) dimension declared large
       enough to contain the longest string in the
       array. All the strings in a given array are
       therefore defined to be equal in length. For
       example, an array of strings containing the
       names of the months would be dimensioned (12,9)
       in order to accommodate "September", the month
       with the longest name.
    </para>
  </section>



  <section>
    <title>Naming Conventions</title>
    <para>
      Variable, dimension and attribute names should
      begin with a letter and be composed of letters,
      digits, and underscores. Note that this is in
      conformance with the COARDS conventions, but is
      more restrictive than the netCDF interface which
      allows use of the hyphen character. The netCDF
      interface also allows leading underscores in
      names, but the NUG states that this is reserved
      for system use.
    </para>
    <para>
      Case is significant in netCDF names, but it is
      recommended that names should not be distinguished
      purely by case, i.e., if case is disregarded,
      no two names should be the same. It is also
      recommended that names should be obviously
      meaningful, if possible, as this renders the
      file more effectively self-describing.
    </para>
    <para>
      This convention does not standardize any variable
      or dimension names. Attribute names and their
      contents, where standardized, are given in
      English in this document and should appear in
      English in conforming netCDF files for the sake
      of portability. Languages other than English
      are permitted for variables, dimensions, and
      non-standardized attributes. The content of some
      standardized attributes are string values that
      are not standardized, and thus are not required
      to be in English. For example, a description
      of what a variable represents may be given
      in a non-English language using the 
      <varname>long_name</varname>
      attribute 
      (see <xref linkend="long-name"/>) 
      whose contents are not standardized, but a description given by
      the 
      <varname>standard_name</varname> 
      attribute 
      (see <xref linkend="standard-name"/>)
      must be taken from the standard name table which
      is in English.
    </para>
  </section>




  <section id="dimensions">
    <title>Dimensions</title>
    <para>
      A variable may have any number of dimensions,
      including zero, and the dimensions must all have
      different names. <emphasis>COARDS strongly recommends
      limiting the number of dimensions to four,
      but we wish to allow greater flexibility</emphasis>. The
      dimensions of the variable define the axes of
      the quantity it contains. Dimensions other than
      those of space and time may be included. Several
      examples can be found in this document. Under
      certain circumstances, one may need more than
      one dimension in a particular quantity. For
      instance, a variable containing a two-dimensional
      probability density function might correlate the
      temperature at two different vertical levels,
      and hence would have temperature on both axes.
    </para>


    <para>
      If any or all of the dimensions of a variable
      have the interpretations of "date or time"
      (<varname>T</varname>), "height or depth" (<varname>Z</varname>), "latitude"
      (<varname>Y</varname>), or "longitude" (<varname>X</varname>) then we recommend,
      but do not require 
      (see <xref linkend="coards-relationship"/>), 
      those
      dimensions to appear in the relative order <varname>T</varname>,
      then <varname>Z</varname>, then <varname>Y</varname>, then <varname>X</varname> in the CDL definition
      corresponding to the file. All other dimensions
      should, whenever possible, be placed to the left
      of the spatiotemporal dimensions.
    </para>


    <para>
      Dimensions may be of any size, including
      unity. When a single value of some coordinate
      applies to all the values in a variable, the
      recommended means of attaching this information
      to the variable is by use of a dimension
      of size unity with a one-element coordinate
      variable. It is also acceptable to use a scalar
      coordinate variable which eliminates the need
      for an associated size one dimension in the data
      variable. The advantage of using a coordinate
      variable is that all its attributes can be
      used to describe the single-valued quantity,
      including boundaries. For example, a variable
      containing data for temperature at 1.5 m above the
      ground has a single-valued coordinate supplying
      a height of 1.5 m, and a time-mean quantity has a
      single-valued time coordinate with an associated
      boundary variable to record the start and end
      of the averaging period.
    </para>
  </section>
  <section id="variables">
    <title>Variables</title>
    <para>
      This convention does not standardize variable names. 
    </para>
    <para>
      NetCDF variables that contain coordinate data are
      referred to as <emphasis>coordinate variables</emphasis>, <emphasis>auxiliary
      coordinate variables</emphasis>, 
      <emphasis>scalar coordinate variables</emphasis>,
      or 
      <emphasis>multidimensional coordinate variables</emphasis>.
    </para>
    <section id="missing-data">
      <title>Missing Data</title>
      <para>
        The NUG conventions 
        (<ulink url="http://www.unidata.ucar.edu/packages/netcdf/guidef/guidef-13.html#HEADING13-12">NUG section 8.1</ulink>)
        provide the 
        <varname>_FillValue</varname>, 
        <varname>valid_min</varname>,
        <varname>valid_max</varname>, and 
        <varname>valid_range</varname> attributes
        to indicate missing data.
      </para>
      <para>
        The NUG conventions for missing data
        changed significantly between version
        2.3 and version 2.4. Since version 2.4
        the NUG defines missing data as all
        values outside of the 
        <varname>valid_range</varname>, 
        and specifies how the 
        <varname>valid_range</varname> 
        should be defined from the 
        <varname>_FillValue</varname> (which has
        library specified default values) if it
        hasn't been explicitly specified. If
        only one missing value is needed for
        a variable then we strongly recommend
        that this value be specified using
        the 
        <varname>_FillValue</varname> 
        attribute. Doing this guarantees that the missing value will
        be recognized by generic applications
        that follow either the before or after
        version 2.4 conventions.
      </para>
      <para>
        The scalar attribute with the name
        <varname>_FillValue</varname> 
        and of the same type as its
        variable is recognized by the netCDF
        library as the value used to pre-fill
        disk space allocated to the variable. This
        value is considered to be a special value
        that indicates undefined or missing data,
        and is returned when reading values that
        were not written. The 
        <varname>_FillValue</varname>
        should be
        outside the range specified by 
        <varname>valid_range</varname>
        (if used) for a variable. The netCDF
        library defines a default fill value
        for each data type 
        (<ulink url="http://www.unidata.ucar.edu/packages/netcdf/guidef/guidef-12.html#HEADING12-1381">NUG section 7.16</ulink>).
      </para>
      <para>
        The 
        <varname>missing_value</varname> 
        attribute is considered
        deprecated by the NUG and we do not
        recommend its use. However for backwards
        compatibility with COARDS this standard
        continues to recognize the use of the
        <varname>missing_value</varname> 
        attribute to indicate undefined or missing data.
      </para>
      <para>
        The missing values of a variable with
        <varname>scale_factor</varname> 
        and/or 
        <varname>add_offset</varname> 
        attributes
        (see section <xref linkend="packed-data"/>) are interpreted
        relative to the variable's external
        values, i.e., the values stored in the
        netCDF file. Applications that process
        variables that have attributes to indicate
        both a transformation (via a scale and/or
        offset) and missing values should first
        check that a data value is valid, and
        then apply the transformation. Note that
        values that are identified as missing
        should not be transformed. Since the
        missing value is outside the valid
        range it is possible that applying
        a transformation to it could result
        in an invalid operation. For example,
        the default 
        <varname>_FillValue</varname> 
        is very close to
        the maximum representable value of IEEE
        single precision floats, and multiplying
        it by 100 produces an "Infinity" (using
        single precision arithmetic).
      </para>
    </section>
  </section>
  <section>
    <title>Attributes</title>
    <para>
      This standard describes many attributes (some
      mandatory, others optional), but a file may
      also contain non-standard attributes. Such
      attributes do not represent a violation of this
      standard. Application programs should ignore
      attributes that they do not recognise or which
      are irrelevant for their purposes. Conventional
      attribute names should be used wherever
      applicable. Non-standard names should be as
      meaningful as possible. Before introducing
      an attribute, consideration should be given
      to whether the information would be better
      represented as a variable. In general, if a
      proposed attribute requires ancillary data to
      describe it, is multidimensional, requires any of
      the defined netCDF dimensions to index its values,
      or requires a significant amount of storage,
      a variable should be used instead. When this
      standard defines string attributes that may take
      various prescribed values, the possible values
      are generally given in lower case. However,
      applications programs should not be sensitive
      to case in these attributes. Several string
      attributes are defined by this standard to
      contain "blank-separated lists". Consecutive
      words in such a list are separated by one or more
      adjacent spaces. The list may begin and end with
      any number of spaces. See 
      <xref linkend="attribute-appendix"/>
      for a list
      of attributes described by this standard.
    </para>

    <section id="identification-of-conventions">
      <title>Identification of Conventions</title>
      <para>
        We recommend that netCDF files that
        follow these conventions indicate
        this by setting the NUG defined global
        attribute 
        <varname>Conventions</varname> 
        to the string value
        <emphasis role="deletedtext">"<varname>CF-1.2</varname>"</emphasis>
        <emphasis role="newtext">"<varname>CF-1.3</varname>"</emphasis>       
        . The string is interpreted as a
        directory name relative to a directory
        that is a repository of documents
        describing sets of discipline-specific
        conventions. The conventions directory
        name is currently interpreted relative to
        the directory 
        <filename class="directory">pub/netcdf/Conventions/</filename>
        on the host machine 
        <computeroutput>ftp.unidata.ucar.edu</computeroutput>. The
        web based versions of this
        document are linked from the 
        <ulink url="http://www.unidata.ucar.edu/packages/netcdf/conventions.html">
          netCDF Conventions web page
        </ulink>.
      </para>
    </section>

    <section id="description-of-file-contents">
      <title>Description of file contents</title>
      <para>
        The following attributes are intended
        to provide information about where the
        data came from and what has been done to
        it. This information is mainly for the
        benefit of human readers. The attribute
        values are all character strings. For
        readability in ncdump outputs it is
        recommended to embed newline characters
        into long strings to break them into
        lines. For backwards compatibility with
        COARDS none of these global attributes
        is required.
      </para>
      <para>
        The NUG defines <varname>title</varname> and <varname>history</varname>
        to be global attributes. We wish to
        allow the newly defined attributes,
        i.e., <varname>institution</varname>, <varname>source</varname>, 
        <varname>references</varname>,
        and <varname>comment</varname>, to be either global or
        assigned to individual variables. When
        an attribute appears both globally and
        as a variable attribute, the variable's
        version has precedence.
      </para>
      <para>
        <variablelist>
          <varlistentry>
              <term> <varname> title </varname> </term>
              <listitem>
                <para>
                  A succinct description of what is in the dataset.
                </para>
              </listitem>
          </varlistentry>
          <varlistentry>
              <term> <varname> institution </varname> </term>
              <listitem>
                <para>
                  Specifies where the original data was produced.
                </para>
              </listitem>
          </varlistentry>
          <varlistentry>
              <term> <varname> source </varname> </term>
              <listitem>
                <para>
                  The method of production of the original data. If it was model-generated, 
                  <varname>source</varname> 
                  should name the model and
                  its version, as specifically as
                  could be useful.  If it
                  is observational,
                  <varname>source</varname> 
                  should characterize it (e.g., "<varname>surface observation</varname>" or "<varname>radiosonde</varname>").
                </para>
              </listitem>
          </varlistentry>
          <varlistentry>
              <term> <varname> history </varname> </term>
              <listitem>
                <para>
                  Provides an audit trail for modifications to the
                  original data.  Well-behaved generic netCDF
                  filters will automatically append their name
                  and the parameters with which they were invoked to
                  the global history attribute of an input
                  netCDF file. We recommend that each line begin
                  with a timestamp indicating the date and time of day
                  that the program was executed.
                </para>
              </listitem>
          </varlistentry>  
          <varlistentry>
              <term> <varname> references </varname> </term>
              <listitem>
                <para>
                  Published or web-based references that
                  describe the data or methods used to produce it.
                </para>
              </listitem>
          </varlistentry>
          <varlistentry>
              <term> <varname> comment </varname> </term>
              <listitem>
                <para>
                  Miscellaneous information about the data or methods used to produce it.
                </para>
              </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </section>
  </section>
</chapter>

